<?php
/**
 * @file
 * Code for the OpenBerkeley Wysiwyg Override feature.
 */

/**
 * Implements hook_permission().
 */
function openberkeley_wysiwyg_override_permission() {
  return array(
    'use html source button in wysiwyg' => array(
      'title' => t('Use the HTML Source button in WYSIWYG'),
    ),
  );
}

/**
 * Implements hook_wysiwyg_editor_settings_alter()
 * 
 * @see panopoly_wysiwyg_alter_wysiwyg_editor_settings()
 */
function openberkeley_wysiwyg_override_wysiwyg_editor_settings_alter(&$settings, $context) {
  if ($context['profile']->editor == 'tinymce') {
    // If users don't have permission, then hide the button to view source.
    if (!user_access('use html source button in wysiwyg')) {
      $settings['theme_advanced_buttons1'] = str_replace(',code', '', $settings['theme_advanced_buttons1']);
    }
  }
}

/**
 * Get the currently configured pathologic local paths.
 */
function openberkeley_wysiwyg_override_get_pathologic_paths() {
  $paths = variable_get('openberkeley_wysiwyg_override_pathologic_paths', NULL);

  if (!$paths) {
    $paths_array = array();

    // Automatically generate the Pantheon paths.
    if (defined('PANTHEON_ENVIRONMENT')) {
      $server_name = $_SERVER['HTTP_HOST'];
      if (preg_match('/' . PANTHEON_ENVIRONMENT . '-([0-9a-zA-Z-]+)\.pantheon\.berkeley\.edu/', $server_name, $matches)) {
        $project_name = $matches[1];
        foreach (array('dev', 'test', 'live') as $environment_name) {
          $paths_array[] = "http://{$environment_name}-{$project_name}.pantheon.berkeley.edu/";
        }

        // Add examples for the live site and local site.
        $paths_array[] = 'http://EXAMPLE.berkeley.edu';
        $paths_array[] = 'http://EXAMPLE.localhost';
      }
    }

    // If we're not on Pantheon (or couldn't figure out our URL), then we
    // just give some examples.
    if (empty($paths_array)) {
      $paths_array = array(
        'http://dev-EXAMPLE.pantheon.berkeley.edu/',
        'http://test-EXAMPLE.pantheon.berkeley.edu/',
        'http://live-EXAMPLE.pantheon.berkeley.edu/',
        'http://EXAMPLE.localhost/',
        'http://EXAMPLE.berkeley.edu/',
      );
    }

    $paths = implode("\n", $paths_array);
  }

  return $paths;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function openberkeley_wysiwyg_override_form_system_site_information_settings_alter(&$form, &$form_state) {
  $form['openberkeley_wysiwyg_override'] = array(
    '#type' => 'fieldset',
    '#title' => t('Pathologic paths'),
  );
  $form['openberkeley_wysiwyg_override']['openberkeley_wysiwyg_override_pathologic_paths'] = array(
    '#type' => 'textarea',
    '#title' => t('All base paths for this site'),
    '#default_value' => openberkeley_wysiwyg_override_get_pathologic_paths(),
    '#description' => t('If this site is or was available at more than one base path or URL, enter them here, separated by line breaks. For example, if this site is live at <code>http://example.com/</code> but has a staging version at <code>http://dev.example.org/staging/</code>, you would enter both those URLs here. If confused, please read <a href="!docs">Pathologic&rsquo;s documentation</a> for more information about this option and what it affects.', array('!docs' => 'http://drupal.org/node/257026')),
  );
  
  $form['#submit'][] = 'openberkeley_wysiwyg_override_form_system_site_information_settings_submit';
}

/**
 * Submission callback for system_site_information_settings().
 */
function openberkeley_wysiwyg_override_form_system_site_information_settings_submit($form, &$form_state) {
  $local_paths = $form_state['values']['openberkeley_wysiwyg_override_pathologic_paths'];

  // If this is the installer, then the variable won't get saved by default,
  // like it will on the settings form. So, we do it explicitly here.
  if ($form['#form_id'] == 'install_configure_form') {
    variable_set('openberkeley_wysiwyg_override_pathologic_paths', $local_paths);
  }

  // We save the new values to text formats that use it so that a
  // features_revert() isn't necessary to keep everything in the Default state.
  $format_ids = array('panopoly_html_text');
  foreach ($format_ids as $format_id) {
    // Load a format object that can be saved with filter_format_save().
    $format = filter_format_load($format_id);
    $format->filters = array();
    foreach (filter_list_format($format_id) as $name => $filter) {
      // Unfortunately, filter_format_save() expects filters to be arrays
      // rather than objects.
      $format->filters[$name] = (array)$filter;
    }

    // Modify the filter and save.
    $format->filters['pathologic']['settings']['local_paths'] = $local_paths;
    filter_format_save($format);
  }
}

/**
 * Implements hook_filter_default_formats_alter().
 */
function openberkeley_wysiwyg_override_filter_default_formats_alter(&$data) {
  // Modify the 'HTML' filter.
  if (isset($data['panopoly_html_text'])) {
    $data['panopoly_html_text']['filters']['filter_html'] = array(
      'settings' => array(
        'allowed_html' => '<a> <em> <strong> <cite> <code> <ul> <ol> <li> <dl> <dt> <dd> <img> <p> <br> <table> <tbody> <tr> <th> <td> <sup> <blockquote> <h1> <h2> <h3> <h4> <h5> <span> <div> <input> <iframe>',
        'filter_html_help' => 1,
        'filter_html_nofollow' => 0,
      ),
      'status' => 1,
      'weight' => -47,
    );
    $data['panopoly_html_text']['filters']['filter_autop']['weight'] = -44; /* WAS: -45 */
    $data['panopoly_html_text']['filters']['filter_url']['weight'] = -45; /* WAS: -44 */
    $data['panopoly_html_text']['filters']['media_filter']['weight'] = -43; /* WAS: -47 */
    $data['panopoly_html_text']['filters']['pathologic'] = array(
      'settings' => array(
        'local_paths' => openberkeley_wysiwyg_override_get_pathologic_paths(),
        'protocol_style' => 'full',
      ),
      'status' => 1,
      'weight' => -40,
    );
    unset($data['panopoly_html_text']['filters']['caption_filter']);
    unset($data['panopoly_html_text']['filters']['image_resize_filter']);
    unset($data['panopoly_html_text']['filters']['wysiwyg']);
  }

  // Modify the 'WYSIWYG' filter.
  if (isset($data['panopoly_wysiwyg_text'])) {
    $data['panopoly_wysiwyg_text']['filters']['caption_filter'] = array(
      'settings' => array(),
      'status' => 1,
      'weight' => -48,
    );
    $data['panopoly_wysiwyg_text']['filters']['filter_autop'] = array(
      'settings' => array(),
      'status' => 1,
      'weight' => -45,
    );
    $data['panopoly_wysiwyg_text']['filters']['filter_url'] = array(
      'settings' => array(
        'filter_url_length' => 72,
      ),
      'status' => 1,
      'weight' => -44,
    );
    $data['panopoly_wysiwyg_text']['filters']['image_resize_filter'] = array(
      'settings' => array(
        'image_locations' => array(
          'local' => 'local',
          'remote' => 'remote',
        ),
        'link' => 0,
        'link_class' => '',
        'link_rel' => '',
      ),
      'status' => 1,
      'weight' => -50,
    );
    $data['panopoly_wysiwyg_text']['filters']['media_filter'] = array(
      'settings' => array(),
      'status' => 1,
      'weight' => -49,
    );
    $data['panopoly_wysiwyg_text']['filters']['pathologic'] = array(
      'settings' => array(
        'local_paths' => openberkeley_wysiwyg_override_get_pathologic_paths(),
        'protocol_style' => 'full',
      ),
      'status' => 1,
      'weight' => -39,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['rule_valid_classes'] = array(
      0 => 'wysiwyg-break',
      2 => 'image-*',
      4 => 'jquery-*',
      6 => 'img-no-border',
      8 => 'openberkeley-*',
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_border-1'] = array(
      'border' => 0,
      'border-bottom' => 0,
      'border-bottom-width' => 0,
      'border-left' => 0,
      'border-left-width' => 0,
      'border-right' => 0,
      'border-right-width' => 0,
      'border-top' => 0,
      'border-top-width' => 0,
      'border-width' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_border-2'] = array(
      'border-bottom-color' => 0,
      'border-bottom-style' => 0,
      'border-color' => 0,
      'border-left-color' => 0,
      'border-left-style' => 0,
      'border-right-color' => 0,
      'border-right-style' => 0,
      'border-style' => 0,
      'border-top-color' => 0,
      'border-top-style' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_box'] = array(
      'margin' => 0,
      'margin-bottom' => 0,
      'margin-left' => 'margin-left',
      'margin-right' => 'margin-right',
      'margin-top' => 0,
      'padding' => 0,
      'padding-bottom' => 0,
      'padding-left' => 'padding-left',
      'padding-right' => 'padding-right',
      'padding-top' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_color'] = array(
      'background' => 0,
      'background-attachment' => 0,
      'background-color' => 0,
      'background-image' => 0,
      'background-position' => 0,
      'background-repeat' => 0,
      'color' => 'color',
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_dimension'] = array(
      'height' => 0,
      'line-height' => 0,
      'max-height' => 0,
      'max-width' => 0,
      'min-height' => 0,
      'min-width' => 0,
      'width' => 'width',
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_font'] = array(
      'font' => 0,
      'font-family' => 0,
      'font-size' => 0,
      'font-size-adjust' => 0,
      'font-stretch' => 0,
      'font-style' => 0,
      'font-variant' => 0,
      'font-weight' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_layout'] = array(
      'clear' => 0,
      'display' => 'display',
      'float' => 'float',
      'position' => 0,
      'visibility' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_list'] = array(
      'list-style' => 0,
      'list-style-image' => 0,
      'list-style-position' => 0,
      'list-style-type' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_positioning'] = array(
      'bottom' => 0,
      'clip' => 0,
      'left' => 0,
      'overflow' => 0,
      'right' => 0,
      'top' => 0,
      'vertical-align' => 0,
      'z-index' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_table'] = array(
      'border-collapse' => 0,
      'border-spacing' => 0,
      'caption-side' => 0,
      'empty-cells' => 0,
      'table-layout' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_text'] = array(
      'direction' => 0,
      'letter-spacing' => 0,
      'text-align' => 'text-align',
      'text-decoration' => 'text-decoration',
      'text-indent' => 0,
      'text-transform' => 0,
      'unicode-bidi' => 0,
      'white-space' => 0,
      'word-spacing' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['style_user'] = array(
      'cursor' => 0,
      'outline' => 0,
      'outline-color' => 0,
      'outline-style' => 0,
      'outline-width' => 0,
      'zoom' => 0,
    );
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['settings']['valid_elements'] = 'a[name|href|target<_blank|title|style|class],
                div[class|style|align<center?justify?left?right],
                br,em,i,strong,cite,code,blockquote,ul,ol,li,dl,dt,dd,
                table,tbody,tr,th[rowspan|colspan|scope|width|style],td[rowspan|colspan|scope|width|style],sup,
                span[class|style],p[style],
                h1,h2,h3,h4,h5,h6,
                img[!src|title|alt|style|width|height|class],
                @[class|style],
                hr'; /* WAS: 'a[!href|target<_blank|title|style|class],
    div[style|class|align<center?justify?left?right],
    br,em,i,strong,cite,code,blockquote,ul,ol,li,dl,dt,dd,
    span[style],p[style|class],
    h1[style|class],h2[style|class],h3[style|class],h4[style|class],h5[style|class],h6[style|class],
    img[!src|title|alt|style|width|height|class|hspace|vspace],
    @[style|class]' */
    $data['panopoly_wysiwyg_text']['filters']['wysiwyg']['weight'] = -48; /* WAS: -49 */
  }
}

/**
 * Implements hook_wysiwyg_default_profiles_alter().
 */
function openberkeley_wysiwyg_override_wysiwyg_default_profiles_alter(&$data) {
  // Modify the 'HTML' format.
  if (isset($data['panopoly_html_text'])) {
    $data['panopoly_html_text']['settings']['apply_source_formatting'] = 1; /* WAS: 0 */
    $data['panopoly_html_text']['settings']['block_formats'] = 'h2,h3,h4,h5,h6'; /* WAS: 'h1,h2,h3,h4,h5,h6' */
    $data['panopoly_html_text']['settings']['buttons']['linkit'] = array(
      'linkit' => 1,
    );
    unset($data['panopoly_html_text']['settings']['buttons']['default']['link']);
  }

  // Modify the 'WYSIWYG' format.
  if (isset($data['panopoly_wysiwyg_text'])) {
    $data['panopoly_wysiwyg_text']['settings']['apply_source_formatting'] = 1; /* WAS: 0 */
    $data['panopoly_wysiwyg_text']['settings']['block_formats'] = 'h2,h3,h4,h5,h6'; /* WAS: 'h1,h2,h3,h4,h5,h6' */
    $data['panopoly_wysiwyg_text']['settings']['buttons']['default']['anchor'] = 1; /* WAS: '' */
    $data['panopoly_wysiwyg_text']['settings']['buttons']['default']['code'] = 1; /* WAS: '' */
    $data['panopoly_wysiwyg_text']['settings']['buttons']['default']['hr'] = 1; /* WAS: '' */
    $data['panopoly_wysiwyg_text']['settings']['buttons']['default']['sup'] = 1; /* WAS: '' */
    $data['panopoly_wysiwyg_text']['settings']['buttons']['table'] = array(
      'tablecontrols' => 1,
    );
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['captionfilter']);
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['default']['charmap']);
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['default']['forecolor']);
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['default']['justifyfull']);
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['default']['strikethrough']);
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['default']['underline']);
    unset($data['panopoly_wysiwyg_text']['settings']['buttons']['drupal']['break']);
  }
}

/**
 * Implements hook_default_linkit_profiles_alter().
 */
function openberkeley_wysiwyg_override_default_linkit_profiles_alter(&$data) {
  if (isset($data['content_editors'])) {
    $data['content_editors']->data['plugins']['entity:file']['enabled'] = 1; /* WAS: 0 */
  }
}
